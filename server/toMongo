const { MongoClient } = require('mongodb');
const fs = require('fs');

var client, db, collection;
const MONGODB_DB_NAME = 'clearfashion';

async function connectToMongo() {
    // Connection URL
    const uri = `mongodb+srv://nico:test@clearfashion.xamlsbk.mongodb.net/test?retryWrites=true&w=majority`;

    // Create a new MongoClient
    client = new MongoClient(uri);

    // Connect to the MongoDB Atlas cluster
    client.connect(err => {
        if (err) {
            console.error('Error connecting to MongoDB Atlas:', err);
            return;
        }
        
        // Connected successfully
        console.log('Connected to MongoDB Atlas');  
    });
    db =  client.db(MONGODB_DB_NAME);
    collection = db.collection('products');
}

async function disconnectFromMongo() {
    client.close();
}

async function insertProducts() {
    // Delete all documents in the collection
    console.log('Deleting all documents in the collection');
    await collection.deleteMany({});
    console.log('Done');
    // read all file names in the directory
    const files = fs.readdirSync("./server/exports");
    console.log('Adding files: ', files);
    // loop through all the files and insert them
    let products;
    
    // read the file
    products = JSON.parse(fs.readFileSync(`./server/exports/${files[0]}`));
    // insert the products
    await collection.insertMany(products);
    // read the file
    products = JSON.parse(fs.readFileSync(`./server/exports/${files[1]}`));
    // insert the products
    await collection.insertMany(products);
    // read the file
    products = JSON.parse(fs.readFileSync(`./server/exports/${files[2]}`));
    // insert the products
    await collection.insertMany(products);
    console.log('Done');
    process.exit(0);
};

async function getProducts(brand=undefined,lessThan=undefined,sortByPrice=false,sortByDate=false,scrappedLessThan2WeeksAgo=false) {
    let filter={},result='No result';
    // Find products by brand
    if (brand !== undefined) filter.brand=brand;
    if (lessThan !== undefined) filter.price={$lt:lessThan};
    result= await collection.find(filter);
    if (sortByPrice) result = result.sort({price: 1});
    if (sortByDate) result = result.sort({scrapDate: -1});
    result = await result.toArray();
    if (scrappedLessThan2WeeksAgo) result = result.filter(product => new Date(product.scrapDate) > new Date(Date.now() - 14 * 24 * 60 * 60 * 1000));
    console.log(result);
    process.exit(0);
}

async function main() {
    // connect to mongo
    await connectToMongo();
    // insert products
    //await insertProducts();
    // get products
    await getProducts('Dedicated',40,true,false,true);
    // disconnect from mongo
    //await disconnectFromMongo();
}

main();